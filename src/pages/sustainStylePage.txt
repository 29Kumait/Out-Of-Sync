export function clearSidebar() {
  const sidebar = document.getElementById("SIDEBAR_ID"); // Replace with your sidebar's ID
  sidebar.innerHTML = "";
  // Reset any additional styles or classes if needed
}

export function slideInNewPage(elementId, duration = 500) {
  const newPage = document.getElementById(elementId);
  newPage.style.position = "relative";
  newPage.style.top = "-100vh"; // Start from above the viewport

  setTimeout(() => {
    newPage.style.transition = `top ${duration}ms ease-in-out`;
    newPage.style.top = "0";
  }, 0);
}

export function applyStyles(elementId, styles) {
  const element = document.getElementById(elementId);

  for (const [key, value] of Object.entries(styles)) {
    element.style[key] = value;
  }
}
export function setPosition(elementId, x, y) {
  const element = document.getElementById(elementId);

  element.style.position = "absolute";
  element.style.left = `${x}px`;
  element.style.top = `${y}px`;
}
// Initialize a grid layout with specified columns and rows
export function initGridLayout(elementId, columns, rows) {
  const element = document.getElementById(elementId);
  element.style.display = "grid";
  element.style.gridTemplateColumns = columns;
  element.style.gridTemplateRows = rows;
  element.style.gap = "10px";
}

// Initialize a container with flexbox and column layout
export function initFlexColumnContainer(elementId) {
  const element = document.getElementById(elementId);
  element.style.display = "flex";
  element.style.flexDirection = "column";
  element.style.alignItems = "center";
  element.style.justifyContent = "center";
}

// Function to set relative dimensions based on parent element
export function setRelativeSize(elementId, widthPercent, heightPercent) {
  const element = document.getElementById(elementId);
  element.style.width = `${widthPercent}%`;
  element.style.height = `${heightPercent}%`;
  element.style.overflow = "auto"; // To handle excess content
}
// Function to set fixed dimensions for an element
export function setFixedSize(elementId, width, height) {
  const element = document.getElementById(elementId);
  element.style.width = `${width}px`;
  element.style.height = `${height}px`;
  element.style.overflow = "auto"; // To handle excess content
}
// Function to fade an element in or out
export function fadeElement(elementId, fadeIn = true, duration = 1000) {
  const element = document.getElementById(elementId);
  element.style.transition = `opacity ${duration}ms`;

  if (fadeIn) {
    element.style.opacity = 1;
  } else {
    element.style.opacity = 0;
  }
}
